AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Resources to be created to manage a team

Parameters:
  pPipelineReference:
    Type: String
    Default: none
  pAthenaBucket:
    Description: S3 Athena bucket
    Type: String
    Default: "{{resolve:ssm:/sdlf/storage/rAthenaBucket/dev}}"
#  pSNSNotificationsEmail:
#    Description: Email address for SNS notifications
#    Type: String
#    Default: nobody@amazon.com
  pTeamName:
    Description: Name of the team (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]{2,12}"

Resources:
  ######## KMS #########
  rKMSInfraKey:
    Type: AWS::KMS::Key
    UpdateReplacePolicy: Retain
    DeletionPolicy: RetainExceptOnCreate
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F76
            reason: Full access is allowed to Key admin and some AWS services
    Properties:
      Description: !Sub SDLF ${pTeamName} Infrastructure KMS Key
      EnableKeyRotation: True
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Sub sdlf-${pTeamName}-infra-key-policy
        Statement:
          - Sid: Allow administration of the key
            Effect: Allow
            Principal:
              AWS: [!Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"]
            Action: kms:*
            Resource: "*"
          - Sid: Allow CloudWatch alarms access
            Effect: Allow
            Principal:
              Service:
                - cloudwatch.amazonaws.com
                - events.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
            Resource: "*"
          - Sid: Allow logs access
            Effect: Allow
            Principal:
              Service:
                - !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:CreateGrant
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource: "*"
          - Sid: Allow SNS access
            Effect: Allow
            Principal:
              AWS: "*"
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
            Resource: "*"
            Condition:
              StringEquals:
                kms:CallerAccount: !Ref AWS::AccountId
                kms:ViaService: !Sub sns.${AWS::Region}.amazonaws.com

  rKMSInfraKeyAlias:
    Type: AWS::KMS::Alias
    UpdateReplacePolicy: Retain
    DeletionPolicy: RetainExceptOnCreate
    Properties:
      AliasName: !Sub alias/sdlf-${pTeamName}-kms-infra-key
      TargetKeyId: !Ref rKMSInfraKey

  rKMSInfraKeySsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /SDLF/KMS/${pTeamName}/InfraKeyId
      Type: String
      Value: !GetAtt rKMSInfraKey.Arn
      Description: !Sub Arn of the ${pTeamName} KMS infrastructure key

  ######## SNS #########
  rSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub sdlf-${pTeamName}-notifications
      KmsMasterKeyId: !GetAtt rKMSInfraKey.Arn

  rSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Id: !Sub sdlf-${pTeamName}-notifications
        Version: "2012-10-17"
        Statement:
          - Sid: !Sub sdlf-${pTeamName}-notifications
            Effect: Allow
            Principal:
              Service:
                - cloudwatch.amazonaws.com
                - events.amazonaws.com
            Action: sns:Publish
            Resource: !Ref rSNSTopic
      Topics:
        - !Ref rSNSTopic

  rSNSTopicSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /SDLF/SNS/${pTeamName}/Notifications
      Type: String
      Value: !Ref rSNSTopic
      Description: The ARN of the team-specific SNS Topic

  ######## LAKEFORMATION PERMISSIONS #########
  rAthenaWorkgroup:
    Type: AWS::Athena::WorkGroup
    Properties:
      Description: !Sub Athena workgroup for team ${pTeamName}
      Name: !Sub sdlf-${pTeamName}
      State: ENABLED
      WorkGroupConfiguration:
        EnforceWorkGroupConfiguration: true
        EngineVersion:
          SelectedEngineVersion: Athena engine version 3
          EffectiveEngineVersion: Athena engine version 3
        PublishCloudWatchMetricsEnabled: true
        ResultConfiguration:
          EncryptionConfiguration:
            EncryptionOption: SSE_KMS
            KmsKey: !GetAtt rKMSInfraKey.Arn
          OutputLocation: !Sub s3://${pAthenaBucket}/${pTeamName}/

  rAthenaWorkgroupSsm:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /SDLF/Athena/${pTeamName}/WorkgroupName
      Type: String
      Value: !Ref rAthenaWorkgroup
      Description: The name of the Athena workgroup

Outputs:
  oPipelineReference:
    Description: CodePipeline reference this stack has been deployed with
    Value: !Ref pPipelineReference
