AWSTemplateFormatVersion: "2010-09-09"
Description: CICD resources to handle deployment of a new team

Parameters:
  pArtifactsBucket:
    Description: The artifacts bucket used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/DevOpsArtifactsBucket
  pKMSKey:
    Description: The KMS key used by CodeBuild and CodePipeline
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/KMS/CICDKeyId
  pDomain:
    Description: Name of the data domain (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]{2,9}"
  pTeamName:
    Description: Team name
    Type: String
  pCrossAccountTeamRole:
    Description: Team-specific cross-account role used to deploy stacks
    Type: String
  pChildAccountId:
    Description: Child AWS account ID
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
  pEnvironment:
    Description: Environment name
    Type: String
    AllowedValues: [dev, test, prod]
    Default: dev
  pBuildDeployDatalakeLibraryLayer:
    Description: Name of the CodeBuild job that packages the Datalake Libs into a Lambda Layer
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildDeployDatalakeLibraryLayer
  pBuildCloudformationModuleStage:
    Description: CodeBuild job that build a CloudFormation module from a SAM template
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildCloudformationModuleStage
  pBuildCloudformationStagesModules:
    Description: CodeBuild job that build CloudFormation modules from a SAM template for SDLF stages
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildCloudformationStagesModules
  pBuildCloudFormationPackage:
    Description: CodeBuild job that packages a CloudFormation template
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeBuild/BuildCloudFormationPackage
  pEnableLambdaLayerBuilder:
    Description: Add Lambda layer builder infrastructure and pipeline stages
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/LambdaLayerBuilder/Enabled
  pEnableGlueJobDeployer:
    Description: Add Glue job deployer infrastructure and pipeline stages
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/GlueJobDeployer/Enabled
  pGitPlatform:
    Description: Platform used to host git repositories
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/Misc/GitPlatform
  pCicdRepository:
    Description: Name of the Cicd repository
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/CicdCodeCommit
  pDatalakeLibraryRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/DatalakeLibraryCodeCommit
  pPipelineRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/PipelineCodeCommit
  pStageARepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/StageACodeCommit
  pStageLambdaRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/StageLambdaCodeCommit
  pStageBRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/StageBCodeCommit
  pStageGlueRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/StageGlueCodeCommit
  pDatasetRepository:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/CodeCommit/DatasetCodeCommit
  pSdlfModuleDomain:
    Type: String
    Default: awslabs
    Description: "A placeholder domain used for default SDLF components"
  pSdlfModuleTeam:
    Type: String
    Default: sdlf
    Description: "A placeholder team used for default SDLF components"

Mappings:
  pCodeCommitBranch:
    dev:
      branch: dev
    test:
      branch: test
    prod:
      branch: main

Conditions:
  GitPlatformCodeCommit: !Equals [!Ref pGitPlatform, "CodeCommit"]
  GitPlatformNoCodeCommit: !Not [!Equals [!Ref pGitPlatform, "CodeCommit"]]
  EnableLambdaLayerBuilder: !Equals [!Ref pEnableLambdaLayerBuilder, true]
  EnableGlueJobDeployer: !Equals [!Ref pEnableGlueJobDeployer, true]
  EnableOptionalFeatures: !Or [!Condition EnableLambdaLayerBuilder, !Condition EnableGlueJobDeployer]

Resources:
  ######## CODEPIPELINE #########
  rTeamMainCodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role assumed by CodePipeline to fetch CloudFormation templates from the team main repository
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - !If
                - GitPlatformCodeCommit
                - Effect: Allow
                  Action:
                    - codecommit:GetBranch
                    - codecommit:GetCommit
                    - codecommit:GitPull
                    - codecommit:GetRepository
                    - codecommit:UploadArchive
                    - codecommit:GetUploadArchiveStatus
                    - codecommit:CancelUploadArchive
                  Resource:
                    - !Sub "arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:{{resolve:ssm:/SDLF/CodeCommit/${pTeamName}/MainCodeCommit}}"
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pCicdRepository}
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatalakeLibraryRepository}
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pPipelineRepository}
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageARepository}
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageLambdaRepository}
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageBRepository}
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pStageGlueRepository}
                    - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${pDatasetRepository}
                - !Ref "AWS::NoValue"
              - !If
                - GitPlatformNoCodeCommit
                - Effect: Allow
                  Action:
                    - codeconnections:UseConnection
                    - codestar-connections:UseConnection
                  Resource:
                    - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  Condition:
                    "ForAllValues:StringLikeIfExists":
                      "codeconnections:FullRepositoryId":
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/{{resolve:ssm:/SDLF/${pGitPlatform}/${pTeamName}/Main${pGitPlatform}}}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pCicdRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pDatalakeLibraryRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pPipelineRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageARepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageLambdaRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageBRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageGlueRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pDatasetRepository}"
                      "codestar-connections:FullRepositoryId":
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/{{resolve:ssm:/SDLF/${pGitPlatform}/${pTeamName}/Main${pGitPlatform}}}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pCicdRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pDatalakeLibraryRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pPipelineRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageARepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageLambdaRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageBRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageGlueRepository}"
                        - !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pDatasetRepository}"
                - !Ref "AWS::NoValue"
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: !Ref pKMSKey
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildCloudFormationPackage}"
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildCloudformationModuleStage}"
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildCloudformationStagesModules}"
                  - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${pBuildDeployDatalakeLibraryLayer}"
                  - !If
                    - EnableLambdaLayerBuilder
                    - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/{{resolve:ssm:/SDLF/CodeBuild/BuildLambdaLayersPackage}}"
                    - !Ref AWS::NoValue
                  - !If
                    - EnableGlueJobDeployer
                    - !Sub "arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/{{resolve:ssm:/SDLF/CodeBuild/PrepareGlueJobPackage}}"
                    - !Ref AWS::NoValue
        - PolicyName: sdlf-cicd-cloudformation
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-devops-crossaccount-pipeline

  rTeamCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt rTeamMainCodePipelineRole.Arn
      Stages:
        - Name: Sources
          Actions: !If
            - GitPlatformCodeCommit
            - - Name: Source
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: TemplateSource
                Configuration:
                  RepositoryName: !Sub "{{resolve:ssm:/SDLF/CodeCommit/${pTeamName}/MainCodeCommit}}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
              - Name: SourceCicd
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceCicdArtifact
                Configuration:
                  RepositoryName: !Ref pCicdRepository
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
              - Name: SourceDatalakeLibrary
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceDatalakeLibraryArtifact
                Configuration:
                  RepositoryName: !Ref pDatalakeLibraryRepository
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
              - Name: SourcePipeline
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: SourcePipelineArtifact
                Configuration:
                  RepositoryName: !Ref pPipelineRepository
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
              - Name: SourceStageA
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceStageAArtifact
                Configuration:
                  RepositoryName: !Ref pStageARepository
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
              - Name: SourceStageLambda
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceStageLambdaArtifact
                Configuration:
                  RepositoryName: !Ref pStageLambdaRepository
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
              - Name: SourceStageB
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceStageBArtifact
                Configuration:
                  RepositoryName: !Ref pStageBRepository
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
              - Name: SourceStageGlue
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceStageGlueArtifact
                Configuration:
                  RepositoryName: !Ref pStageGlueRepository
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
              - Name: SourceDataset
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceDatasetArtifact
                Configuration:
                  RepositoryName: !Ref pDatasetRepository
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  PollForSourceChanges: false
                RunOrder: 1
            - - Name: Source
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: TemplateSource
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/{{resolve:ssm:/SDLF/${pGitPlatform}/${pTeamName}/Main${pGitPlatform}}}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
              - Name: SourceCicd
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceCicdArtifact
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pCicdRepository}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
              - Name: SourceDatalakeLibrary
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceDatalakeLibraryArtifact
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pDatalakeLibraryRepository}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
              - Name: SourcePipeline
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: SourcePipelineArtifact
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pPipelineRepository}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
              - Name: SourceStageA
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceStageAArtifact
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageARepository}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
              - Name: SourceStageLambda
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceStageLambdaArtifact
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageLambdaRepository}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
              - Name: SourceStageB
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceStageBArtifact
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageBRepository}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
              - Name: SourceStageGlue
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceStageGlueArtifact
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pStageGlueRepository}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
              - Name: SourceDataset
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeStarSourceConnection
                  Version: "1"
                OutputArtifacts:
                  - Name: SourceDatasetArtifact
                Configuration:
                  ConnectionArn: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/CodeConnection}}"
                  FullRepositoryId: !Sub "{{resolve:ssm:/SDLF/${pGitPlatform}/Group}}/${pDatasetRepository}"
                  BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
                  OutputArtifactFormat: CODE_ZIP
                RunOrder: 1
        - !If
          - EnableOptionalFeatures
          - Name: BuildOptionalFeatures
            Actions:
              - !If
                - EnableGlueJobDeployer
                - Name: BuildGlueJobs
                  InputArtifacts:
                    - Name: TemplateSource
                    - Name: SourceCicdArtifact
                  OutputArtifacts:
                    - Name: GlueJobDeployerArtifact
                  Namespace: GlueJobVariables
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Version: "1"
                    Provider: CodeBuild
                  Configuration:
                    PrimarySource: TemplateSource
                    ProjectName: "{{resolve:ssm:/SDLF/CodeBuild/PrepareGlueJobPackage}}"
                    EnvironmentVariables: !Sub >-
                      [{"name":"CROSSACCOUNT_TEAM_ROLE", "value":"${pCrossAccountTeamRole}", "type":"PLAINTEXT"},
                      {"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                      {"name":"DOMAIN", "value":"${pDomain}", "type":"PLAINTEXT"},
                      {"name":"TEAM", "value":"${pTeamName}", "type":"PLAINTEXT"},
                      {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"}]
                  RunOrder: 1
                - !Ref AWS::NoValue
              - !If
                - EnableLambdaLayerBuilder
                - Name: BuildLambdaLayers
                  InputArtifacts:
                    - Name: TemplateSource
                  Namespace: LambdaLayersVariables
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Version: "1"
                    Provider: CodeBuild
                  Configuration:
                    ProjectName: "{{resolve:ssm:/SDLF/CodeBuild/BuildLambdaLayersPackage}}"
                    EnvironmentVariables: !Sub >-
                      [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                      {"name":"DOMAIN", "value":"${pDomain}", "type":"PLAINTEXT"},
                      {"name":"TEAM", "value":"${pTeamName}", "type":"PLAINTEXT"}]
                  RunOrder: 1
                - !Ref AWS::NoValue
          - !Ref AWS::NoValue
        - !If
          - EnableOptionalFeatures
          - Name: DeployOptionalFeatures
            Actions:
              - !If
                - EnableGlueJobDeployer
                - Name: CreateGlueJobsStack
                  RoleArn: !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-devops-crossaccount-pipeline
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: "1"
                  InputArtifacts:
                    - Name: TemplateSource
                    - Name: GlueJobDeployerArtifact
                  Configuration:
                    ActionMode: CREATE_UPDATE
                    RoleArn: !Ref pCrossAccountTeamRole
                    StackName: !Sub sdlf-${pTeamName}-gluejobs-${pEnvironment}
                    TemplatePath: "GlueJobDeployerArtifact::template-glue-job.full.yaml"
                    TemplateConfiguration: "TemplateSource::tags.json"
                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                    ParameterOverrides: !Sub |+
                      {
                        "pTeamName": "${pTeamName}",
                        "pGlueJobs": "#{GlueJobVariables.TRANSFORMS_CDL}"
                      }
                  RunOrder: 1
                - !Ref AWS::NoValue
              - !If
                - EnableLambdaLayerBuilder
                - Name: CreateLambdaLayersStack
                  RoleArn: !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-devops-crossaccount-pipeline
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: "1"
                  InputArtifacts:
                    - Name: TemplateSource
                    - Name: SourceCicdArtifact
                  Configuration:
                    ActionMode: CREATE_UPDATE
                    RoleArn: !Ref pCrossAccountTeamRole
                    StackName: !Sub sdlf-${pTeamName}-lambdalayers-${pEnvironment}
                    TemplatePath: "SourceCicdArtifact::template-lambda-layer.yaml"
                    TemplateConfiguration: "TemplateSource::tags.json"
                    Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                    ParameterOverrides: !Sub |+
                      {
                        "pArtifactsBucket": "${pArtifactsBucket}",
                        "pDomain": "${pDomain}",
                        "pEnvironment": "${pEnvironment}",
                        "pTeamName": "${pTeamName}",
                        "pLayers": "#{LambdaLayersVariables.LAYERS_CDL}",
                        "pGitRef": "#{LambdaLayersVariables.CODEBUILD_RESOLVED_SOURCE_VERSION}"
                      }
                  RunOrder: 1
                - !Ref AWS::NoValue
          - !Ref AWS::NoValue
        -
          Name: BuildPipelineDataset
          Actions:
            -
              Name: DeployDatalakeLibrary
              InputArtifacts:
              - Name: SourceCicdArtifact
              - Name: SourceDatalakeLibraryArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                PrimarySource: SourceDatalakeLibraryArtifact
                ProjectName: !Ref pBuildDeployDatalakeLibraryLayer
                EnvironmentVariables: !Sub >-
                  [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildPipeline
              InputArtifacts:
              - Name: SourceCicdArtifact
              - Name: SourcePipelineArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                PrimarySource: SourcePipelineArtifact
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"pipeline", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildStageA
              InputArtifacts:
              - Name: SourceCicdArtifact
              - Name: SourceStageAArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                PrimarySource: SourceStageAArtifact
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"stageA", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildStageLambda
              InputArtifacts:
              - Name: SourceCicdArtifact
              - Name: SourceStageLambdaArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                PrimarySource: SourceStageLambdaArtifact
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"stageLambda", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildStageB
              InputArtifacts:
              - Name: SourceCicdArtifact
              - Name: SourceStageBArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                PrimarySource: SourceStageBArtifact
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"stageB", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildStageGlue
              InputArtifacts:
              - Name: SourceCicdArtifact
              - Name: SourceStageGlueArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                PrimarySource: SourceStageGlueArtifact
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"stageGlue", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildDataset
              InputArtifacts:
              - Name: SourceCicdArtifact
              - Name: SourceDatasetArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                PrimarySource: SourceDatasetArtifact
                ProjectName: !Ref pBuildCloudformationModuleStage
                EnvironmentVariables: !Sub >-
                  [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_NAME", "value":"${pSdlfModuleDomain}", "type":"PLAINTEXT"},
                   {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                   {"name":"TEAM_NAME", "value":"${pSdlfModuleTeam}", "type":"PLAINTEXT"},
                   {"name":"MODULE_NAME", "value":"dataset", "type":"PLAINTEXT"}]
              RunOrder: 1
            -
              Name: BuildStages
              InputArtifacts:
              - Name: SourceCicdArtifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudformationStagesModules
                EnvironmentVariables: !Sub
                  - >-
                      [{"name":"ENVIRONMENT", "value":"${pEnvironment}", "type":"PLAINTEXT"},
                      {"name":"BRANCH_NAME", "value":"${BranchName}", "type":"PLAINTEXT"},
                      {"name":"DOMAIN_NAME", "value":"${pDomain}", "type":"PLAINTEXT"},
                      {"name":"DOMAIN_ACCOUNT_ID", "value":"${pChildAccountId}", "type":"PLAINTEXT"},
                      {"name":"TEAM_NAME", "value":"${pTeamName}", "type":"PLAINTEXT"}]
                  - BranchName: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
              RunOrder: 2
        - Name: BuildPipelinesTemplate
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: TemplateSource
              OutputArtifacts:
                - Name: TemplatePackage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudFormationPackage
                EnvironmentVariables: >-
                  [{"name":"TEMPLATE", "value":"pipelines.yaml", "type":"PLAINTEXT"}]
              RunOrder: 1
        - Name: DeployPipelinesInfrastructure
          Actions:
            - Name: CreateStack
              RoleArn: !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-devops-crossaccount-pipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: TemplateSource
                - Name: TemplatePackage
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Ref pCrossAccountTeamRole
                StackName: !Sub sdlf-${pTeamName}-pipelines-${pEnvironment}
                TemplatePath: "TemplatePackage::packaged-template.yaml"
                TemplateConfiguration: "TemplateSource::tags.json"
                ParameterOverrides: |
                  {
                    "pPipelineReference" : "#{codepipeline.PipelineExecutionId}"
                  }
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              RunOrder: 1
        - Name: BuildDatasetsTemplate
          Actions:
            - Name: Build
              InputArtifacts:
                - Name: TemplateSource
              OutputArtifacts:
                - Name: DatasetsTemplatePackage
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref pBuildCloudFormationPackage
                EnvironmentVariables: >-
                  [{"name":"TEMPLATE", "value":"datasets.yaml", "type":"PLAINTEXT"}]
              RunOrder: 1
        - Name: DeployDatasetsInfrastructure
          Actions:
            - Name: CreateStack
              RoleArn: !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:role/sdlf-cicd-devops-crossaccount-pipeline
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              InputArtifacts:
                - Name: TemplateSource
                - Name: DatasetsTemplatePackage
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !Ref pCrossAccountTeamRole
                StackName: !Sub sdlf-${pTeamName}-datasets-${pEnvironment}
                TemplatePath: "DatasetsTemplatePackage::packaged-template.yaml"
                TemplateConfiguration: "TemplateSource::tags.json"
                ParameterOverrides: |
                  {
                    "pPipelineReference" : "#{codepipeline.PipelineExecutionId}"
                  }
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref pArtifactsBucket
        EncryptionKey:
          Id: !Ref pKMSKey
          Type: KMS

  rTeamMainCodeCommitTriggerRole:
    Type: AWS::IAM::Role
    Condition: GitPlatformCodeCommit
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: sdlf-cicd-trigger-rule
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rTeamCodePipeline}

  rTeamMainCodeCommitTriggerRule:
    Type: AWS::Events::Rule
    Condition: GitPlatformCodeCommit
    Properties:
      State: ENABLED
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !Sub "arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:{{resolve:ssm:/SDLF/CodeCommit/${pTeamName}/MainCodeCommit}}"
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch]
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${rTeamCodePipeline}
          RoleArn: !GetAtt rTeamMainCodeCommitTriggerRole.Arn
          Id: sdlf-cicd-team
