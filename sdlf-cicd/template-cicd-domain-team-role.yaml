AWSTemplateFormatVersion: "2010-09-09"
Description: SDLF CICD roles in child account

Parameters:
  pDevOpsArtifactsBucket:
    Description: DevOps Artifacts bucket
    Type: String
  pDevOpsKMSKey:
    Description: DevOps KMS key ARN
    Type: String
  pTeamName:
    Description: Team name
    Type: String
  pDomain:
    Description: Data domain name
    Type: String
  pEnvironment:
    Description: Environment name
    Type: String
    AllowedValues: [dev, test, prod]
  pEnableGlueJobDeployer:
    Description: Add Glue job deployer infrastructure and pipeline stages
    Type: String
  pEnableLambdaLayerBuilder:
    Description: Add Lambda layer builder infrastructure and pipeline stages
    Type: String
  pEnableMonitoring:
    Description: Build sdlf-monitoring cloudformation module as part of domain pipelines
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/Monitoring/Enabled
  pEnableVpc:
    Description: Deploy SDLF resources in a VPC
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/VPC/Enabled

Conditions:
  EnableGlueJobDeployer: !Equals [!Ref pEnableGlueJobDeployer, true]
  EnableLambdaLayerBuilder: !Equals [!Ref pEnableLambdaLayerBuilder, true]
  EnableMonitoring: !Equals [!Ref pEnableMonitoring, true]
  RunInVpc: !Equals [!Ref pEnableVpc, true]

Resources:
  rTeamCloudFormationRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: |-
              Lambda event source mappings can only be controlled through the lambda:FunctionArn condition key
              KMS permissions are controlled through kms:ResourceAliases, the team's KMS infra key has not been created yet and its ARN is not known
          - id: W28
            reason: the name is heavily tied to the logic in sdlf-cicd//lambda/team-cicd/src/lambda_function.py
    Properties:
      RoleName: !Sub sdlf-cicd-team-${pTeamName}
      Description: Role assumed by CodePipeline to deploy a team's pipelines and datasets stacks
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: base
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::${pDevOpsArtifactsBucket}/*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Describe*
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:List*
                  - kms:ReEncrypt*
                Resource: !Ref pDevOpsKMSKey
        - PolicyName: sdlf-pipeline-interface
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - scheduler:ListTagsForResource
                  - scheduler:UntagResource
                  - scheduler:TagResource
                  - scheduler:DeleteSchedule
                  - scheduler:GetSchedule
                  - scheduler:CreateSchedule
                  - scheduler:UpdateSchedule
                Resource:
                  - !Sub arn:${AWS::Partition}:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/sdlf-${pTeamName}/sdlf-${pTeamName}-*
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-${pTeamName}/sdlf-${pTeamName}-*
                Condition:
                  StringEquals:
                    "iam:PassedToService": scheduler.amazonaws.com
              - Effect: Allow
                Action:
                  - events:DeleteRule
                  - events:DescribeRule
                  - events:DisableRule
                  - events:EnableRule
                  - events:PutRule
                  - events:PutTargets
                  - events:RemoveTargets
                Resource: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/sdlf-${pTeamName}/sdlf-${pTeamName}-*
              - Effect: Allow
                Action:
                  - sqs:AddPermission
                  - sqs:CreateQueue
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteQueue
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                  - sqs:ListQueueTags
                  - sqs:RemovePermission
                  - sqs:SetQueueAttributes
                  - sqs:TagQueue
                  - sqs:UntagQueue
                Resource: !Sub arn:${AWS::Partition}:sqs:${AWS::Region}:${AWS::AccountId}:sdlf-${pTeamName}-*
              - Effect: Allow
                Action:
                  - lambda:GetEventSourceMapping # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - lambda:CreateEventSourceMapping # can only be controlled through lambda:FunctionArn condition key
                  - lambda:DeleteEventSourceMapping # can only be controlled through lambda:FunctionArn condition key
                  - lambda:UpdateEventSourceMapping # can only be controlled through lambda:FunctionArn condition key
                Resource: "*"
                Condition:
                  ArnLike:
                    "lambda:FunctionArn": !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-${pTeamName}-*
              - Sid: DenyWriteAccessToSsmFromSdlfTeam
                Effect: Deny
                Action:
                  - ssm:RemoveTagsFromResource
                  - ssm:DeleteParameter
                  - ssm:DeleteParameters
                  - ssm:PutParameter
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/IAM/${pTeamName}/TeamPermissionsBoundary
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/KMS/${pTeamName}/InfraKeyId
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/KMS/${pTeamName}/DataKeyId
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/SNS/${pTeamName}/Notifications
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/EventBridge/${pTeamName}/ScheduleGroupName
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/IAM/${pTeamName}/CrawlerRoleArn
              - Sid: ReadOnlyAccessSsm
                Effect: Allow
                Action:
                  - ssm:DescribeParameters
                  - ssm:GetParameter
                  - ssm:GetParameterHistory
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:ListTagsForResource
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Misc/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/S3/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Lambda/LatestDatalakeLibraryLayer
              - Effect: Allow
                Action:
                  - ssm:AddTagsToResource
                  - ssm:DescribeParameters
                  - ssm:GetParameter
                  - ssm:GetParameterHistory
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:ListTagsForResource
                  - ssm:RemoveTagsFromResource
                  - ssm:DeleteParameter
                  - ssm:DeleteParameters
                  - ssm:PutParameter
                Resource:
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Pipelines/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Datasets/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Lambda/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/SQS/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/SNS/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/KMS/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/EventBridge/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/SM/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/Glue/${pTeamName}/*
                  - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/IAM/${pTeamName}/*
              - Effect: Allow
                Action:
                  - kms:CreateGrant
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:Encrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                Resource: "*"
                Condition:
                  "ForAnyValue:StringLike":
                    "kms:ResourceAliases":
                      - !Sub alias/sdlf-${pTeamName}-kms-infra-key

  rTeamCloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W13
            reason: The actions with "*" are all ones that only support the all resources wildcard
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:DescribeLogGroups
              - logs:CreateLogStream
              - logs:DeleteLogStream
              - logs:DeleteLogGroup
              - logs:DescribeLogStreams
              - logs:PutLogEvents
              - logs:PutRetentionPolicy
              - logs:TagResource
            Resource:
              - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sdlf-${pTeamName}-*
          - Effect: Allow
            Action:
              - cloudwatch:DeleteAlarms
              - cloudwatch:DescribeAlarms
              - cloudwatch:PutMetricAlarm
              - cloudwatch:PutMetricData
              - cloudwatch:SetAlarmState
            Resource:
              - !Sub arn:${AWS::Partition}:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:sdlf-${pTeamName}-*
          - Effect: Allow
            Action:
              - lakeformation:GetDataAccess # W11 exception
              - lakeformation:GrantPermissions # W11 exception
              - lakeformation:RevokePermissions # W11 exception
              - lakeformation:GetResourceLFTags # W11 exception
              - lakeformation:AddLFTagsToResource # W11 exception
              - lakeformation:RemoveLFTagsFromResource # W11 exception
              - lakeformation:ListPermissions # W11 exception
            Resource: "*"
          - Effect: Allow
            Action:
              - glue:CreateCrawler
              - glue:DeleteCrawler
              - glue:GetCrawler
              - glue:GetCrawlers
              - glue:UpdateCrawler
              - glue:StopCrawler
              - glue:TagResource
              - glue:UntagResource
            Resource: !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:crawler/sdlf-${pTeamName}-*
          - Effect: Allow
            Action:
              - glue:CreateDatabase
              - glue:DeleteDatabase
              - glue:GetDatabase
              - glue:GetDatabases
              - glue:UpdateDatabase
              - glue:TagResource
              - glue:UntagResource
            Resource:
              - !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:catalog
              - !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/*_${pDomain}_${pEnvironment}_${pTeamName}_* # forecourt_datalake_dev_engineering_legislators_db/*
              - !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/*_${pDomain}_${pEnvironment}_${pTeamName}_*
              - !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:userDefinedFunction/*_${pDomain}_${pEnvironment}_${pTeamName}_*
          - Effect: Allow
            Action:
              - lambda:ListFunctions # W13 exception
            Resource: "*"
          - Effect: Allow
            Action:
              - lambda:GetLayerVersion
            Resource: 
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:sdlf-* # there are sdlf-wide layers (datalake-lib-layer)
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:336392948345:layer:AWSSDKPandas-* # allow managed AWS SDK for Pandas layer
          - Effect: Allow
            Action:
              - lambda:CreateFunction
              - lambda:UpdateFunctionConfiguration
            Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-${pTeamName}-*
            Condition: !If
              - RunInVpc
              - StringEquals:
                  "lambda:VpcIds":
                    - "{{resolve:ssm:/SDLF/VPC/VpcId}}"
              - !Ref "AWS::NoValue"
          - Effect: Allow
            Action:
              - lambda:AddPermission
              - lambda:CreateAlias
              - lambda:DeleteFunction
              - lambda:DeleteFunctionConcurrency
              - lambda:GetFunction
              - lambda:GetFunctionConfiguration
              - lambda:InvokeFunction
              - lambda:ListTags
              - lambda:PublishVersion
              - lambda:PutFunctionConcurrency
              - lambda:RemovePermission
              - lambda:TagResource
              - lambda:UntagResource
              - lambda:UpdateAlias
              - lambda:UpdateFunctionCode
              - lambda:AddPermission
              - lambda:RemovePermission
            Resource:
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:sdlf-${pTeamName}-*
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:event-source-mapping:* # for lambda:TagResource
          - Effect: Allow
            Action:
              - states:ListActivities # W13 exception
              - states:ListStateMachines # W13 exception
            Resource: "*"
          - Effect: Allow
            Action:
              - states:CreateStateMachine
              - states:DeleteStateMachine
              - states:DescribeStateMachine
              - states:DescribeStateMachineForExecution
              - states:UpdateStateMachine
              - states:CreateActivity
              - states:DescribeActivity
              - states:DeleteActivity
              - states:GetActivityTask
              - states:TagResource
              - states:UntagResource
            Resource:
              - !Sub arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:sdlf-${pTeamName}-*
              - !Sub arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:activity:sdlf-${pTeamName}-*
          - Effect: Allow
            Action:
              - cloudformation:CreateChangeSet
              - cloudformation:CreateStack
              - cloudformation:DeleteChangeSet
              - cloudformation:DeleteStack
              - cloudformation:DescribeChangeSet
              - cloudformation:DescribeStacks
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:UpdateStack
              - cloudformation:GetTemplate
              - cloudformation:GetTemplateSummary
            Resource:
              - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/sdlf-${pTeamName}-pipelines-${pEnvironment}-*
          - Effect: Allow
            Action:
              - cloudformation:ListStacks # W11 exception
              - cloudformation:ValidateTemplate # W11 exception
            Resource: "*"
          - !If
            - RunInVpc
            - Effect: Allow
              Action:
                - ec2:DescribeSecurityGroups # W11 exception
                - ec2:DescribeSubnets # W11 exception
                - ec2:DescribeVpcs # W11 exception
              Resource:
                - "*"
            - !Ref "AWS::NoValue"
      Roles:
        - !Ref rTeamCloudFormationRole

  rTeamCloudFormationIamPolicy:
    Type: AWS::IAM::ManagedPolicy
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W13
            reason: The actions with "*" are all ones that only support the all resources wildcard
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-${pTeamName}/sdlf-*
            Condition:
              StringEquals:
                "iam:PassedToService":
                  - lambda.amazonaws.com
                  - states.amazonaws.com
                  - glue.amazonaws.com
          - Effect: Allow
            Action: iam:PassRole
            Resource: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-team-${pTeamName} # nested stacks
            Condition:
              StringEquals:
                "iam:PassedToService":
                  - cloudformation.amazonaws.com
          - Effect: Allow
            Action:
              - iam:ListRoles # W13 exception
              - iam:ListPolicies # W13 exception
            Resource: "*"
          - Effect: Allow
            Action:
              - iam:ListPolicyVersions
              - iam:CreatePolicy
              - iam:CreatePolicyVersion
              - iam:DeletePolicy
              - iam:DeletePolicyVersion
              - iam:GetPolicy
              - iam:GetPolicyVersion
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/sdlf-${pTeamName}/sdlf-${pTeamName}-*
          - Effect: Allow
            Action:
              - iam:CreateRole
              - iam:PutRolePermissionsBoundary
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-${pTeamName}/sdlf-${pTeamName}-*
            Condition:
              ArnLike:
                "iam:PermissionsBoundary": !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/sdlf/${pTeamName}/sdlf-domain-*
          - Effect: Allow
            Action:
              - iam:AttachRolePolicy
              - iam:DetachRolePolicy
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-${pTeamName}/sdlf-${pTeamName}-*
            Condition:
              ArnLike:
                "iam:PolicyARN":
                  - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/sdlf-${pTeamName}/sdlf-${pTeamName}-*
                  - !If
                    - RunInVpc
                    - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
                    - !Ref "AWS::NoValue"
          - Effect: Allow
            Action:
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:ListRolePolicies
              - iam:PutRolePolicy
              - iam:UntagRole
              - iam:UpdateRole
              - iam:UpdateRoleDescription
              - iam:TagRole
              - iam:UpdateAssumeRolePolicy
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-${pTeamName}/sdlf-${pTeamName}-*
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-${pTeamName}-* # TODO should not be required. investigate
      Roles:
        - !Ref rTeamCloudFormationRole

  rTeamGlueJobsCloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: EnableGlueJobDeployer
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:CreateChangeSet
            Resource:
              - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/LanguageExtensions
          - Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
              - ssm:GetParametersByPath
            Resource:
              - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/KMS/KeyArn
              - !Sub arn:${AWS::Partition}:ssm:${AWS::Region}:${AWS::AccountId}:parameter/SDLF/VPC/*
          - Effect: Allow
            Action:
              - iam:CreateRole
              - iam:PutRolePermissionsBoundary
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/sdlf-${pTeamName}-* # Glue Jobs always prepend /service-role/ as path
            Condition:
              ArnLike:
                "iam:PermissionsBoundary": !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/sdlf/${pTeamName}/sdlf-domain-*
          - Effect: Allow
            Action:
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:ListRolePolicies
              - iam:PutRolePolicy
              - iam:UntagRole
              - iam:UpdateRole
              - iam:UpdateRoleDescription
              - iam:TagRole
              - iam:UpdateAssumeRolePolicy
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/sdlf-${pTeamName}-*
          - Effect: Allow
            Action:
              - iam:AttachRolePolicy
              - iam:DetachRolePolicy
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/service-role/sdlf-${pTeamName}-*
            Condition:
              ArnEquals:
                "iam:PolicyARN":
                  - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSGlueServiceRole
                  - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess
                  - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchLogsFullAccess
          - Effect: Allow
            Action:
              - glue:CreateJob
              - glue:UpdateJob
              - glue:DeleteJob
              - glue:TagResource
              - glue:UntagResource
            Resource:
              - !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:job/sdlf-${pTeamName}-*
          - !If
            - RunInVpc
            - Effect: Allow
              Action:
                - glue:CreateConnection
                - glue:UpdateConnection
                - glue:DeleteConnection
              Resource:
                - !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:catalog
                - !Sub arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:connection/sdlf-${pTeamName}-glue-conn-*
            - !Ref "AWS::NoValue"
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-${pTeamName}-* # TODO cfn bug?
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-${pTeamName}/sdlf-${pTeamName}-*
            Condition:
              StringEquals:
                "iam:PassedToService": glue.amazonaws.com
      Roles:
        - !Ref rTeamCloudFormationRole

  rTeamLambdaLayersCloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: EnableLambdaLayerBuilder
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudformation:CreateChangeSet
            Resource:
              - !Sub arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/LanguageExtensions
          - Effect: Allow
            Action:
              - lambda:PublishLayerVersion
              - lambda:DeleteLayerVersion
            Resource:
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:sdlf-${pTeamName}-*
      Roles:
        - !Ref rTeamCloudFormationRole

  rMonitoringDatasetCloudFormationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: EnableMonitoring
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:CreateStorageLensGroup
              - s3:UpdateStorageLensGroup
              - s3:GetStorageLensGroup
              - s3:ListStorageLensGroups
              - s3:DeleteStorageLensGroup
              - s3:TagResource
              - s3:UntagResource
              - s3:ListTagsForResource
            Resource:
              - !Sub arn:${AWS::Partition}:s3:${AWS::Region}:${AWS::AccountId}:storage-lens-group/sdlf-${pTeamName}-*
      Roles:
        - !Ref rTeamCloudFormationRole
