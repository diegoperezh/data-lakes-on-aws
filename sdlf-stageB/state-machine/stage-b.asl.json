{
  "Comment": "Simple Glue-based transform",
  "StartAt": "Try",
  "States": {
    "Try": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Pre-update Catalog",
          "States": {
            "Pre-update Catalog": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "${lStep1}:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "Next": "Process Data"
            },
            "Process Data": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "ResultPath": "$.body.glue.run_output",
              "Parameters": {
                "JobName.$": "$.body.glue.job_name",
                "WorkerType.$": "$.body.glue.WorkerType",
                "NumberOfWorkers.$": "$.body.glue.NumberOfWorkers",
                "Arguments.$": "$.body.glue.arguments"
              },
              "Next": "Run Glue Crawler"
            },
            "Run Glue Crawler": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
              "ResultPath": null,
              "Parameters": {
                "Name.$": "$.body.glue.crawler_name"
              },
              "Next": "Wait X Seconds"
            },
            "Wait X Seconds": {
              "Type": "Wait",
              "SecondsPath": "$.body.glue.wait_time",
              "Next": "GetCrawler"
            },
            "GetCrawler": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:glue:getCrawler",
              "ResultPath": "$.body.glue.crawler_response",
              "Parameters": {
                "Name.$": "$.body.glue.crawler_name"
              },
              "Next": "Crawler Complete?"
            },
            "Crawler Complete?": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.body.glue.crawler_response.Crawler.State",
                  "StringEquals": "READY",
                  "Next": "Post-update Catalog"
                }
              ],
              "Default": "Wait X Seconds"
            },
            "Post-update Catalog": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "ResultPath": null,
              "Parameters": {
                "Payload.$": "$",
                "FunctionName": "${lStep3}:$LATEST"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 2,
                  "MaxAttempts": 6,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        }
      ],
      "End": true,
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": null,
          "Next": "Error"
        }
      ]
    },
    "Error": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "${lError}:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    }
  }
}